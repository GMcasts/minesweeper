<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_tile</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
opened_tiles = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PERFECTLY FINE WINDOWS CONTROLS
/*
//verify it is not a flag square
if(image_index != 6 &amp;&amp; mouse_check_button_released(mb_left) &amp;&amp; mouse_x &gt;= bbox_left &amp;&amp; mouse_x &lt;= bbox_right &amp;&amp;
mouse_y &gt;= bbox_top &amp;&amp; mouse_y &lt;= bbox_bottom){
    image_index = ds_grid_get(o_board.board, x/128, y/128);
    if(image_index = 2) {
        instance_create(room_width/2, room_height/2, o_loser);
    }else {
        //open_adjacent_tiles(x/128, y/128, false);
        open_left_tiles(x/128, y/128, false);
        open_right_tiles(x/128, y/128, false);
        open_top_tiles(x/128, y/128, false);
        open_bottom_tiles(x/128, y/128, false);
    }
    //instance_destroy();    
}

if(mouse_check_button_released(mb_right) &amp;&amp; mouse_x &gt;= bbox_left &amp;&amp; mouse_x &lt;= bbox_right &amp;&amp;
mouse_y &gt;= bbox_top &amp;&amp; mouse_y &lt;= bbox_bottom){
    if(image_index==6){
        image_index = 0;
        o_board.flags += 1;
    }else if(o_board.flags &gt; 0 &amp;&amp;image_index == 0){
        image_index = 6;
        o_board.flags -= 1;
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///android and iphone specific

//verify it is not a flag square
if(!global.pause &amp;&amp; !global.cant_click)
  {
  for(i=0;i&lt;=0;i++){
      if(o_player.hold_time&gt;500000 &amp;&amp; !o_player.flag_triggered &amp;&amp; device_mouse_x(i) &gt;= bbox_left &amp;&amp; device_mouse_x(i) &lt;= bbox_right &amp;&amp;
      device_mouse_y(i) &gt;= bbox_top &amp;&amp; device_mouse_y(i) &lt;= bbox_bottom){
          if(o_board.flags &gt; 0 &amp;&amp; image_index == 0){
              instance_create(x,y, o_flag_effect);
              image_index = 6;
              o_board.flags -= 1;
              o_player.flag_triggered = true;
          }
      }
      if(device_mouse_check_button(i,mb_left)) {
          with(o_player){
              if(timer_active){
                  hold_time += current_time - start_time;
              }else{
                  start_time = current_time;
                  timer_active = true;
              }
          }
      }
  
      if(o_player.click_state == "CLEAR" &amp;&amp; !o_player.flag_triggered &amp;&amp; image_index != 6 &amp;&amp; device_mouse_check_button_released(i, mb_left) &amp;&amp; device_mouse_x(i) &gt;= bbox_left &amp;&amp; device_mouse_x(i) &lt;= bbox_right &amp;&amp;
      device_mouse_y(i) &gt;= bbox_top &amp;&amp; device_mouse_y(i) &lt;= bbox_bottom){
          image_index = ds_grid_get(o_board.board, x/128, y/128);
          if(image_index = 2) {
              instance_create(room_width/2, room_height/2, o_loser);
          }else {
              //open_adjacent_tiles(x/128, y/128, false);
              open_left_tiles(x/128, y/128, false);
              open_right_tiles(x/128, y/128, false);
              open_top_tiles(x/128, y/128, false);
              open_bottom_tiles(x/128, y/128, false);
          }
          
          //instance_destroy();    
      }else if(image_index == 6 &amp;&amp; !o_player.flag_triggered &amp;&amp; device_mouse_check_button_released(i, mb_left) &amp;&amp; device_mouse_x(i) &gt;= bbox_left &amp;&amp; device_mouse_x(i) &lt;= bbox_right &amp;&amp;
      device_mouse_y(i) &gt;= bbox_top &amp;&amp; device_mouse_y(i) &lt;= bbox_bottom){
          image_index = 0;
          o_board.flags += 1;
      }
      
      if(o_player.click_state == "FLAG" &amp;&amp; !o_player.flag_triggered &amp;&amp; device_mouse_check_button_released(i, mb_left) &amp;&amp; device_mouse_x(i) &gt;= bbox_left &amp;&amp; device_mouse_x(i) &lt;= bbox_right &amp;&amp;
      device_mouse_y(i) &gt;= bbox_top &amp;&amp; device_mouse_y(i) &lt;= bbox_bottom){
          if(image_index==6){
              image_index = 0;
              o_board.flags += 1;
          }else if(o_board.flags &gt; 0 &amp;&amp; image_index == 0){
              image_index = 6;
              o_board.flags -= 1;
          }
      }
    }
  }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///open tiles 
if(image_index = 1 &amp;&amp; !opened_tiles){
    open_left_tiles(x/128, y/128, false);
    open_right_tiles(x/128, y/128, false);
    open_top_tiles(x/128, y/128, false);
    open_bottom_tiles(x/128, y/128, false);
    opened_tiles = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
